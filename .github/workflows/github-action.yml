# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]


permissions:  
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
    
    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    
    ## create application-dev.properties
    - name: make application-dev.properties
      if: contains(github.ref, 'develop') ## branch가 develop 일 때
      run: |
        # spring의 resources 경로 이동
        cd ./src/main/resources
        
        # application-dev.properties 파일 생성
        touch ./application-dev.properties
        
        # GitHub-Actions 에서 설정한 값을 application-dev.properties에 쓰기
        echo "${{ secrets.PROPERTIES_DEV }}" > ./application-dev.properties
        shell: bash
        
    ## create appication-prod.properties
    - name: make application-prod.properties
      if: contains(github.ref, 'main') # branch가 main 일 때
      run: |
        cd ./src/main/resources
        touch ./application-prod.properties
        echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.properties

    ## grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    ## docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile-prod -t ${{ secrets.DOCKER_REPO }}/discovery-prod .
          docker push ${{ secrets.DOCKER_REPO }}/discovery-prod

    ## docker build & push to develop
    - name: Docker build & push to dev
      if: contains(github.ref, 'develop')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKER_REPO }}/discovery-dev .
          docker push ${{ secrets.DOCKER_REPO }}/disdovery-dev
